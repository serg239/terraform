digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] aws_eip.this" [label = "aws_eip.this", shape = "box"]
		"[root] aws_instance.ec2-instance" [label = "aws_instance.ec2-instance", shape = "box"]
		"[root] aws_internet_gateway.infra-ec2-igw" [label = "aws_internet_gateway.infra-ec2-igw", shape = "box"]
		"[root] aws_nat_gateway.infra-ec2-nat-gw" [label = "aws_nat_gateway.infra-ec2-nat-gw", shape = "box"]
		"[root] aws_route_table.private-rtb" [label = "aws_route_table.private-rtb", shape = "box"]
		"[root] aws_route_table.public-rtb" [label = "aws_route_table.public-rtb", shape = "box"]
		"[root] aws_route_table_association.private-rta1" [label = "aws_route_table_association.private-rta1", shape = "box"]
		"[root] aws_route_table_association.private-rta2" [label = "aws_route_table_association.private-rta2", shape = "box"]
		"[root] aws_route_table_association.public-rta1" [label = "aws_route_table_association.public-rta1", shape = "box"]
		"[root] aws_route_table_association.public-rta2" [label = "aws_route_table_association.public-rta2", shape = "box"]
		"[root] aws_security_group.infra-ec2-sg" [label = "aws_security_group.infra-ec2-sg", shape = "box"]
		"[root] aws_subnet.private-subnet1" [label = "aws_subnet.private-subnet1", shape = "box"]
		"[root] aws_subnet.private-subnet2" [label = "aws_subnet.private-subnet2", shape = "box"]
		"[root] aws_subnet.public-subnet1" [label = "aws_subnet.public-subnet1", shape = "box"]
		"[root] aws_subnet.public-subnet2" [label = "aws_subnet.public-subnet2", shape = "box"]
		"[root] aws_vpc.this" [label = "aws_vpc.this", shape = "box"]
		"[root] data.aws_ami.ubuntu-16-amd64-hvm" [label = "data.aws_ami.ubuntu-16-amd64-hvm", shape = "box"]
		"[root] data.aws_availability_zones.available" [label = "data.aws_availability_zones.available", shape = "box"]
		"[root] data.template_file.user-data" [label = "data.template_file.user-data", shape = "box"]
		"[root] output.public-dns" [label = "output.public-dns", shape = "note"]
		"[root] output.public-ip" [label = "output.public-ip", shape = "note"]
		"[root] output.vpc-id" [label = "output.vpc-id", shape = "note"]
		"[root] provider.aws" [label = "provider.aws", shape = "diamond"]
		"[root] provider.template" [label = "provider.template", shape = "diamond"]
		"[root] var.aws-region" [label = "var.aws-region", shape = "note"]
		"[root] var.cidr-all" [label = "var.cidr-all", shape = "note"]
		"[root] var.cidr-vpc" [label = "var.cidr-vpc", shape = "note"]
		"[root] var.cluster-name" [label = "var.cluster-name", shape = "note"]
		"[root] var.create-private-subnets" [label = "var.create-private-subnets", shape = "note"]
		"[root] var.ec2-instance-type" [label = "var.ec2-instance-type", shape = "note"]
		"[root] var.environment" [label = "var.environment", shape = "note"]
		"[root] var.key-name" [label = "var.key-name", shape = "note"]
		"[root] var.pub-key-path" [label = "var.pub-key-path", shape = "note"]
		"[root] var.server-port" [label = "var.server-port", shape = "note"]
		"[root] aws_eip.this" -> "[root] provider.aws"
		"[root] aws_eip.this" -> "[root] var.create-private-subnets"
		"[root] aws_instance.ec2-instance" -> "[root] aws_security_group.infra-ec2-sg"
		"[root] aws_instance.ec2-instance" -> "[root] aws_subnet.public-subnet1"
		"[root] aws_instance.ec2-instance" -> "[root] data.aws_ami.ubuntu-16-amd64-hvm"
		"[root] aws_instance.ec2-instance" -> "[root] data.template_file.user-data"
		"[root] aws_instance.ec2-instance" -> "[root] var.ec2-instance-type"
		"[root] aws_internet_gateway.infra-ec2-igw" -> "[root] aws_vpc.this"
		"[root] aws_nat_gateway.infra-ec2-nat-gw" -> "[root] aws_eip.this"
		"[root] aws_nat_gateway.infra-ec2-nat-gw" -> "[root] aws_internet_gateway.infra-ec2-igw"
		"[root] aws_nat_gateway.infra-ec2-nat-gw" -> "[root] aws_subnet.public-subnet1"
		"[root] aws_route_table.private-rtb" -> "[root] aws_nat_gateway.infra-ec2-nat-gw"
		"[root] aws_route_table.private-rtb" -> "[root] var.cidr-all"
		"[root] aws_route_table.public-rtb" -> "[root] aws_internet_gateway.infra-ec2-igw"
		"[root] aws_route_table.public-rtb" -> "[root] var.cidr-all"
		"[root] aws_route_table_association.private-rta1" -> "[root] aws_route_table.private-rtb"
		"[root] aws_route_table_association.private-rta1" -> "[root] aws_subnet.private-subnet1"
		"[root] aws_route_table_association.private-rta2" -> "[root] aws_route_table.private-rtb"
		"[root] aws_route_table_association.private-rta2" -> "[root] aws_subnet.private-subnet2"
		"[root] aws_route_table_association.public-rta1" -> "[root] aws_route_table.public-rtb"
		"[root] aws_route_table_association.public-rta1" -> "[root] aws_subnet.public-subnet1"
		"[root] aws_route_table_association.public-rta2" -> "[root] aws_route_table.public-rtb"
		"[root] aws_route_table_association.public-rta2" -> "[root] aws_subnet.public-subnet2"
		"[root] aws_security_group.infra-ec2-sg" -> "[root] aws_vpc.this"
		"[root] aws_security_group.infra-ec2-sg" -> "[root] var.cidr-all"
		"[root] aws_security_group.infra-ec2-sg" -> "[root] var.server-port"
		"[root] aws_subnet.private-subnet1" -> "[root] aws_vpc.this"
		"[root] aws_subnet.private-subnet1" -> "[root] data.aws_availability_zones.available"
		"[root] aws_subnet.private-subnet1" -> "[root] var.create-private-subnets"
		"[root] aws_subnet.private-subnet2" -> "[root] aws_vpc.this"
		"[root] aws_subnet.private-subnet2" -> "[root] data.aws_availability_zones.available"
		"[root] aws_subnet.private-subnet2" -> "[root] var.create-private-subnets"
		"[root] aws_subnet.public-subnet1" -> "[root] aws_vpc.this"
		"[root] aws_subnet.public-subnet1" -> "[root] data.aws_availability_zones.available"
		"[root] aws_subnet.public-subnet2" -> "[root] aws_vpc.this"
		"[root] aws_subnet.public-subnet2" -> "[root] data.aws_availability_zones.available"
		"[root] aws_vpc.this" -> "[root] provider.aws"
		"[root] aws_vpc.this" -> "[root] var.cidr-vpc"
		"[root] aws_vpc.this" -> "[root] var.cluster-name"
		"[root] aws_vpc.this" -> "[root] var.environment"
		"[root] data.aws_ami.ubuntu-16-amd64-hvm" -> "[root] provider.aws"
		"[root] data.aws_availability_zones.available" -> "[root] provider.aws"
		"[root] data.template_file.user-data" -> "[root] provider.template"
		"[root] data.template_file.user-data" -> "[root] var.server-port"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_route_table_association.private-rta1"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_route_table_association.private-rta2"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_route_table_association.public-rta1"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_route_table_association.public-rta2"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.public-dns"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.public-ip"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.vpc-id"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] var.pub-key-path"
		"[root] output.public-dns" -> "[root] aws_instance.ec2-instance"
		"[root] output.public-ip" -> "[root] aws_instance.ec2-instance"
		"[root] output.vpc-id" -> "[root] aws_vpc.this"
		"[root] provider.aws (close)" -> "[root] aws_instance.ec2-instance"
		"[root] provider.aws (close)" -> "[root] aws_route_table_association.private-rta1"
		"[root] provider.aws (close)" -> "[root] aws_route_table_association.private-rta2"
		"[root] provider.aws (close)" -> "[root] aws_route_table_association.public-rta1"
		"[root] provider.aws (close)" -> "[root] aws_route_table_association.public-rta2"
		"[root] provider.aws" -> "[root] var.aws-region"
		"[root] provider.aws" -> "[root] var.key-name"
		"[root] provider.template (close)" -> "[root] data.template_file.user-data"
		"[root] root" -> "[root] meta.count-boundary (EachMode fixup)"
		"[root] root" -> "[root] provider.aws (close)"
		"[root] root" -> "[root] provider.template (close)"
	}
}

